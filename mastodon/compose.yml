services:
  web:
    image: ghcr.io/glitch-soc/mastodon:latest
    restart: always
    env_file:
      - .config/docker.env
    command: bundle exec puma -C config/puma.rb
    networks:
      - external_network
      - mastodon_internal_network
    healthcheck:
      # prettier-ignore
      test: ['CMD-SHELL', 'wget -q --spider --proxy=off localhost:3000/health || exit 1']
    ports:
      - "127.0.0.1:3000:3000"
    depends_on:
      - db
      - redis
      # - es
    volumes:
      - ./public/system:/mastodon/public/system

  streaming:
    image: ghcr.io/glitch-soc/mastodon-streaming:latest
    restart: always
    env_file:
      - .config/docker.env
    command: node ./streaming
    networks:
      - external_network
      - mastodon_internal_network
    healthcheck:
      # prettier-ignore
      test: ['CMD-SHELL', 'wget -q --spider --proxy=off localhost:4000/api/v1/streaming/health || exit 1']
    ports:
      - "127.0.0.1:4000:4000"
    depends_on:
      - db
      - redis

  sidekiq:
    image: ghcr.io/glitch-soc/mastodon:latest
    env_file:
      - .config/docker.env
    command: bundle exec sidekiq
    depends_on:
      - db
      - redis
    networks:
      - external_network
      - mastodon_internal_network
    volumes:
      - ./public/system:/mastodon/public/system
    healthcheck:
      test: ["CMD-SHELL", "ps aux | grep '[s]idekiq\ 6' || false"]

  db:
    restart: always
    image: postgres:14-alpine
    shm_size: 256mb
    networks:
      - mastodon_internal_network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
    volumes:
      - ./postgres14:/var/lib/postgresql/data
    environment:
      - "POSTGRES_HOST_AUTH_METHOD=trust"

  redis:
    restart: always
    image: redis:7-alpine
    networks:
      - mastodon_internal_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
    volumes:
      - ./redis:/data

networks:
  external_network:
  mastodon_internal_network:
    internal: true
